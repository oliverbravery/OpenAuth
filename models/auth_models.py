from typing import Optional
from pydantic import BaseModel


class Authorization(BaseModel):
    """
    Represents temporary authorization data for users.

    Args:
        username (str): The username of the user.
        code_challenge (Optional[str]): A challenge generated by the user for PKCE.
        auth_code (Optional[str]): The temporary code challenge generated by the auth service for PKCE.
        hashed_refresh_token (Optional[str]): The hashed refresh token generated by the auth service.
        hashed_access_token(Optional[str]): The hashed access token generated by the auth service.
        consented_scopes (Optional[str]): The scopes that the user has consented to.
    """
    username: str
    code_challenge: Optional[str] = None
    auth_code: Optional[str] = None
    hashed_refresh_token: Optional[str] = None
    hashed_access_token: Optional[str] = None
    consented_scopes: Optional[str] = None