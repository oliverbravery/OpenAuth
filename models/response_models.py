from pydantic import BaseModel


class AuthorizeResponse(BaseModel):
    """
    A class used to represent the response data when authorizing a user following the OAuth2.0 protocol.
    
    Args:
        authorization_code (str): The authorization code generated by the auth service.
        state (str): The state generated by the client. Used to prevent CSRF attacks.
    """
    authorization_code: str
    state: str
    
class TokenResponse(BaseModel):
    """
    A class used to represent the response data when using /token endpoint following the OAuth2.0 protocol.
    Used for both authentication code and refresh token flows.
    
    Args:
        access_token (str): The access token generated by the auth service.
        expires_in (int): The time in seconds for the token to expire.
        refresh_token (str): The refresh token generated by the auth service.
        token_type (str, optional): The type of the token. Defaults to "Bearer".
    """
    access_token: str
    token_type: str = "Bearer"
    expires_in: int
    refresh_token: str